import React from 'react';
import { useTranslation } from 'react-i18next';
import { type Player, type PlayerStats } from './types';
import Avatar from './Avatar';

const StatBox: React.FC<{ label: string; value: string | number; className?: string }> = ({ label, value, className }) => (
    <div className="bg-gray-900/50 rounded-lg p-4 text-center">
        <p className="text-sm text-gray-400 font-semibold">{label}</p>
        <p className={`text-3xl font-bold font-mono ${className}`}>{value}</p>
    </div>
);


const PlayerStatsDetailModal: React.FC<{
    playerWithStats: { player: Player, stats: PlayerStats };
    onClose: () => void;
}> = ({ playerWithStats, onClose }) => {
    const { t } = useTranslation();
    const { player, stats } = playerWithStats;

    const losses = stats.gamesPlayed - stats.wins;
    const winRate = stats.gamesPlayed > 0 ? `${(stats.wins / stats.gamesPlayed * 100).toFixed(0)}%` : 'N/A';
    const avgScore = stats.totalTurns > 0 ? (stats.totalScore / stats.totalTurns).toFixed(2) : '0.00';

    return (
        <div className="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4" onClick={onClose}>
            <div 
                className="bg-gray-800 rounded-2xl shadow-2xl p-6 w-full max-w-lg text-center transform transition-transform duration-300" 
                onClick={e => e.stopPropagation()}
            >
                <div className="flex flex-col items-center mb-6">
                    <Avatar avatar={player.avatar} className="w-24 h-24 mb-4" />
                    <h2 className="text-3xl font-bold text-teal-400">{player.name}</h2>
                    <p className="text-gray-400">{t('stats.playerDetailsTitle')}</p>
                </div>

                <div className="grid grid-cols-2 sm:grid-cols-3 gap-3 mb-6">
                    <StatBox label={t('stats.games')} value={stats.gamesPlayed} className="text-white" />
                    <StatBox label={t('stats.wins')} value={stats.wins} className="text-green-400" />
                    <StatBox label={t('stats.losses')} value={losses} className="text-red-400" />
                    <StatBox label={t('stats.winRate')} value={winRate} className="text-yellow-400" />
                    <StatBox label={t('stats.avgScore')} value={avgScore} className="text-teal-300" />
                    <StatBox label={t('stats.highestScoreInGame')} value={stats.highestScoreInGame} className="text-indigo-400" />
                    <StatBox label={t('stats.totalScore')} value={stats.totalScore} className="text-white col-span-1 sm:col-span-1" />
                    <StatBox label={t('stats.totalTurns')} value={stats.totalTurns} className="text-white col-span-2 sm:col-span-2" />
                </div>
                
                <button 
                    onClick={onClose} 
                    className="w-full bg-gray-600 hover:bg-gray-700 text-white font-bold py-3 rounded-lg transition-colors"
                >
                    {t('stats.close')}
                </button>
            </div>
        </div>
    );
};

export default PlayerStatsDetailModal;